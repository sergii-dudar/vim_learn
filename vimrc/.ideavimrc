" ================================ info ================================"
" .ideavimrc i sa configuration file for IdeaVim plugin. It uses"
"   the same commands as the original .vimrc configuration."
" You can find a list of commands here: https://jb.gg/h38q75"
" Find more examples here: https://jb.gg/share-ideavimrc"
" plugin instuctions: https://github.com/JetBrains/ideavim/wiki/IdeaVim-Plugins"

" Jetbrains Actions Mappings, all list of possible idea actions exec command :actionlist"
" ============================== basic pre configuration ==========================="

noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

" use jj to move to normal mode
"inoremap jj <esc>

"cnoremap jj <C-c>

" The timeoutlen controls how long to wait before recognizing it as a sequence.
" set timeoutlen=1000 ""https://vi.stackexchange.com/questions/24925/usage-of-timeoutlen-and-ttimeoutlen"

" all key mapping have unique mapping, if there some mapping when I need wait `timeoutlen` to exec, then
" this mapping should be changed
set timeoutlen=2000

" repeat comand for visually selected block"
vnoremap . :norm! .<CR>

" ================================ basic settings ================================="
" https://github.com/JetBrains/ideavim/blob/master/doc/set-commands.md

set number relativenumber
set idearefactormode=keep

set ideajoin
set incsearch
set scrolloff=5
set hlsearch
set ignorecase
set smartcase
set ideaput

" ================================ space as leader ================================="
nnoremap <SPACE> <Nop>
let mapleader = " "

" ================================ plugins https://jb.gg/ideavim-plugins ================================="
set surround            "https://github.com/tpope/vim-surround"
set multiple-cursors    "https://github.com/terryma/vim-multiple-cursors"
set easymotion          "https://github.com/easymotion/vim-easymotion"
set commentary          "https://github.com/tpope/vim-commentary"
set highlightedyank     "https://github.com/machakann/vim-highlightedyank/blob/master/doc/highlightedyank.txt"
set NERDTree            "https://github.com/JetBrains/ideavim/wiki/NERDTree-support"
set exchange            "https://github.com/tommcdo/vim-exchange/blob/master/doc/exchange.txt"
set textobj-indent      "https://www.seanh.cc/2020/08/08/vim-indent-object/, https://github.com/michaeljsmith/vim-indent-object/blob/master/doc/indent-object.txt"

"========================================================================================"
"========================================================================================"
"===============================VIM KEY Mapping ========================================="
"========================================================================================"
"========================================================================================"

"======== (Move to line start/end)========
noremap H ^
noremap L $

"======== (Move between blocks)========"
"noremap J }
"noremap K {

noremap J 6j
noremap K 6k

" (Block ident)"
"vmap < <gv
"vmap > >gv

"(Copy to system clipboard)"
"vmap <C-S-c> +y "

"================================ NERDTree config ================================="
"===https://github.com/JetBrains/ideavim/wiki/NERDTree-support#supported-commands=="
map <C-p> :NERDTree<CR>
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'


"================================ highlightedyank config ================================="
"let g:highlightedyank_highlight_color = "rgba(172, 205, 218, 1)""
let g:highlightedyank_highlight_duration = "300"

"================================ vim-multiple-cursors config ================================="
nmap <leader>n <Plug>NextWholeOccurrence
xmap <leader>n <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
"xmap <C-x> <Plug>SkipOccurrence
"xmap <C-p> <Plug>RemoveOccurrence

"================================ easymotion ================================="
map <leader>k <Plug>(easymotion-s)
map <leader>j <Plug>(easymotion-f)

"================================ macro ================================="
nnoremap R @q " R to execute q macro

"================================ tmpl config ================================="
" TODO:"

"================================ tmpl config ================================="
" TODO:"


"noremap x 5x
"inoremap <C-X> 5x
"inoremap <C-X> <esc>5xa " - remove 5 chard in insert mode and go back to insert mode

"========================================================================================"
"========================================================================================"
"========================Idea Custom Actions Mapping ===================================="
"========================================================================================"
"========================================================================================"
"========================================================================================"
"==:map  - creates mappings for Normal mode, Visual mode, and Operator-pending mode.
"==:nmap - create mappings that are only active in Normal mode.
"== https://vimdoc.sourceforge.net/htmldoc/intro.html#key-notation
"========================================================================================"
"===== All mapping based on leader (space) key
"===== All Intellij actions grouped in logical groups with unique group key with leader key
"==== There present next groups:
"==== key: (e) - Run \ Debug \ Extract (execute)

"==== key: (i) - Introduce
"==== key: (r) - Refactoring \ Rename \ Recent \ Replace
"==== key: (l) - Line
"==== key: (c) - Comment \ Copy \ Code
"==== key: (l) - Line

"==== key: (n) - New
"==== key: (f)(g) - Navigation (find, goto)
"==== key: (h) - Hierarchy \ History
"==== key: (q) - Quick
"==== key: (s) - Show \ History
"==== key: (v) - View mode
"==== key: (w) - Windows
"==== key: (t) - Tabs
"==== key: (m) - Menu
"==== key: (b) - Block (Code fold/expand)
"==== key: (o) - Terminal (open in)
"==== key: (z) - Zen
"==== key: (p) - Project management

" not used yet:
"==== key: (?) - Bookmarks and buffer
"==== key: (?) - Scroll
"==== key: (?) - Debugger

"==== Also there present many mapping based on modifier keys
"==== (especially when need repeat action and not call same all combination again and again that is quite annoying some time)
"==== for more info see separate mapping GROUP.
"====================================== (e) Run \ Debug \ Extract ==============================================="

nmap <leader>ee <Action>(Run)
nmap <leader>ed <Action>(Debug)
nmap <leader>es <Action>(Stop)
nmap <leader>er <Action>(Rerun)

nmap <leader>ecr <Action>(RunClass)
nmap <leader>ecd <Action>(DebugClass)

nmap <leader>et <Action>(RunTests)
nmap <leader>ef <Action>(RerunFailedTests)

"nmap <leader>ea <Action>(RunAnything)
"nmap <leader>ec <Action>(ContextRun)
"nmap <leader>ecc <Action>(ChooseRunConfiguration)

"====== extract
nmap <leader>em <Action>(ExtractMethod)

"======================================= (i) Introduce ================================================="

map <leader>ic <Action>(IntroduceConstant)
map <leader>if <Action>(IntroduceField)
map <leader>ip <Action>(IntroduceParameter)
map <leader>iv <Action>(IntroduceVariable)

map <leader>iif <Action>(IntroduceFunctionalParameter)
map <leader>iiv <Action>(IntroduceFunctionalVariable)
map <leader>iop <Action>(IntroduceParameterObject)

map <leader>im <Action>(IntroduceActionsGroup)

"======================================= (r) Refactoring \ Rename \ Recent \ Replace ================================================="

nmap <leader>ra <Action>(Refactorings.QuickListPopupAction)
nmap <leader>ru <Action>(Unwrap)
"map <leader>rsd <Action>(SafeDelete)

"=== Rename
nmap <leader>re <Action>(RenameElement)
"nmap <leader>rrf <Action>(RenameFile)

"=== Recent
nmap <leader>rf <Action>(RecentFiles)
nmap <leader>rff <Action>(RecentChangedFiles)
nmap <leader>rl <Action>(RecentLocations)


"======================================= (l) Line ================================================="

" Join Lines"
nmap <leader>lj <Action>(EditorJoinLines)
nmap <leader>ls <Action>(EditorSplitLine)
nmap <leader>lt <Action>(EditorSortLines)

"map <M-k> <Action>(MoveLineUp)
"map <M-j> <Action>(MoveLineDown)

"======================================= (c) Comment \ Copy \ Code ================================================="

nmap <leader>cf <Action>(FixDocComment)

map <leader>cl <Action>(CommentByLineComment)
map <leader>cb <Action>(CommentByBlockComment)

"=== Code
nmap <leader>cg       <Action>(Generate)

nmap <leader>ci <Action>(ImplementMethods)
nmap <leader>co <Action>(OverrideMethods)
nmap <leader>cs <Action>(SurroundWith)
"nmap <leader>gic <Action>(InspectCode)

"=== Copy
nmap <leader>cr <Action>(CopyReference)

"======================================= (n) New ... ================================================="

nmap <leader>nn <Action>(NewElement)
nmap <leader>nd <Action>(NewDir)
nmap <leader>nf <Action>(NewFile)
nmap <leader>np <Action>(NewProject)
nmap <leader>nm <Action>(NewModule)
nmap <leader>nc <Action>(NewClass)

"======================================= (s) Show \ History ================================================="

nmap <leader>so <Action>(SelectAllOccurrences)

map <leader>sf <Action>(FindUsages)
map <leader>ss <Action>(ShowUsages)

nmap <leader>se <Action>(ShowErrorDescription)

map <leader>sh <Action>(HighlightUsagesInFile)

"=== git blame
nmap <leader>sa <Action>(Annotate)

"=== History
nmap <leader>sgh <Action>(LocalHistory.ShowHistory)
nmap <leader>sgs <Action>(LocalHistory.ShowSelectionHistory)

"nmap <leader>sf <Action>(ShowFilePath)
"map <leader>ssi <Action>(SelectIn)
"nmap <leader>sw <Action>($SearchWeb)
"======================================= (q) Quick ================================================="

map <leader>qq <Action>(QuickJavaDoc)
map <leader>qi <Action>(QuickImplementations)

map <leader>qs <Action>(QuickChangeScheme)

map <leader>qe <Action>(QuickEvaluateExpression)

"map <leader>qa <Action>(QuickActions)
"map <leader>qt <Action>(QuickTypeDefinition)

"======================================= (h) Hierarchy \ Hide ================================================="

nmap <leader>hc <Action>(CallHierarchy)
nmap <leader>hm <Action>(MethodHierarchy)
nmap <leader>ht <Action>(TypeHierarchy)

"=== Hide
nmap <leader>ha <Action>(HideAllWindows)
nmap <leader>hh <Action>(HideActiveWindow)

"======================================= (v) View mode ================================================="

nmap <leader>vf <Action>(ToggleFullScreen)
nmap <leader>vv <Action>(ToggleDistractionFreeMode)
nmap <leader>vp <Action>(TogglePresentationMode)


"======================================= (f)(g) Navigation ================================================="

"=== (f)
nmap <leader>fe <Action>(SearchEverywhere)
nmap <leader>fp <Action>(FindInPath)
nmap <leader>ff <Action>(Find)
nmap <leader>ft <Action>(TextSearchAction)

"=== Replace
nmap <leader>fr <Action>(Replace)
nmap <leader>fgr <Action>(ReplaceInPath)


nmap <leader>gf <Action>(GotoFile)
nmap <leader>gc <Action>(GotoClass)
nmap <leader>gs <Action>(GotoSymbol)
nmap <leader>ga <Action>(GotoAction)
nmap <leader>gd <Action>(GotoDeclaration)
nmap <leader>ggt <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gt <Action>(GotoTest)
nmap <leader>gm <Action>(GoToSuperMethod)

"=== Modifiers
nmap <C-u> <Action>(GotoNextElementUnderCaretUsage)
nmap <D-u> <Action>(GotoPrevElementUnderCaretUsage)

nmap <C-e> <Action>(GotoNextError)
nmap <D-e> <Action>(GotoPreviousError)

nmap <C-m> <Action>(MethodDown)
nmap <D-m> <Action>(MethodUp)

nmap <C-o> <Action>(NextOccurence)
nmap <D-o> <Action>(PreviousOccurence)

nmap <C-n> <Action>(Forward)
nmap <D-n> <Action>(Back)

" move between active split window tabs
nmap <C-t> <Action>(NextSplitter)
nmap <D-t> <Action>(PrevSplitter)


"nmap <leader>gc <Action>(VcsShowPrevChangeMarker)
"nmap <leader>ge <Action>(JumpToLastChange)
"nmap <leader>fn <Action>(VcsShowNextChangeMarker)

"nmap <leader>fb <Action>(Switcher)

"nmap <leader>fdo <Action>(GotoDatabaseObject)

"nmap <leader>j <Action>(ShowNavBar)

"nmap ]c <Action>(JumpToNextChange)
"nmap ]c <Action>(JumpToLastChange)
"======================================= (t) Tabs ================================================="


"nmap <Tab>     <Action>(NextTab)
nmap <S-Tab>   <Action>(PreviousTab)
nmap <leader>1 <Action>(GoToTab1)
nmap <leader>2 <Action>(GoToTab2)
nmap <leader>3 <Action>(GoToTab3)
nmap <leader>4 <Action>(GoToTab4)
nmap <leader>5 <Action>(GoToTab5)
nmap <leader>6 <Action>(GoToTab6)
nmap <leader>7 <Action>(GoToTab7)
nmap <leader>8 <Action>(GoToTab8)
nmap <leader>9 <Action>(GoToTab9)
nmap <leader>0 <Action>(GoToLastTab)

map <leader>th <Action>(MoveTabLeft)
map <leader>tj <Action>(MoveTabDown)
map <leader>tk <Action>(MoveTabUp)
map <leader>tl <Action>(MoveTabRight)

" (Move between panes top/bottom/left/right)"
"noremap <C-k> <C-w>k
"noremap <C-j> <C-w>j
"noremap <C-h> <C-w>h
"noremap <C-l> <C-w>l
noremap <Tab>k <C-w>k
noremap <Tab>j <C-w>j
noremap <Tab>h <C-w>h
noremap <Tab>l <C-w>l

" (change size of active panes top/bottom/left/right)"
map <A-h> <Action>(StretchSplitToLeft)
map <A-l> <Action>(StretchSplitToRight)
map <A-k> <Action>(StretchSplitToTop)
map <A-j> <Action>(StretchSplitToBottom)

" (change size of active tool window top/bottom/left/right) - intellij keymapping"
"ResizeToolWindowLeft         <A-h>
"ResizeToolWindowRight        <A-l>
"ResizeToolWindowUp           <A-k>
"ResizeToolWindowDown         <A-j>


nmap <Tab>ma <Action>(MaximizeEditorInSplit)


nmap <Tab>mm <Action>(MoveEditorToOppositeTabGroup)
nmap <Tab>oo <Action>(OpenEditorInOppositeTabGroup)

nmap <Tab>ch <Action>(CloseAllToTheLeft)
nmap <Tab>cl <Action>(CloseAllToTheRight)
nmap <Tab>r <Action>(ReopenClosedTab)

nmap <Tab>p <Action>(PinActiveEditorTab)

nmap <Tab>cc <Action>(CloseEditor)
"nmap <Tab>xx <Action>(CloseContent)
nmap <Tab>ca <Action>(CloseAllEditors)
nmap <Tab>ci <Action>(CloseAllEditorsButActive)
nmap <Tab>cp <Action>(CloseAllUnpinnedEditors)

" (Pane vertically split/horizontally split/close)"
nmap <Tab>sh <Action>(SplitHorizontally)
nmap <Tab>sj <Action>(SplitVertically)

nmap <Tab>uu <Action>(Unsplit)
nmap <Tab>ua <Action>(UnsplitAll)

nmap <Action>tl <Action>(JumpToLastWindow)

"======================================= (w) Windows ================================================="

nmap <leader>wc <Action>(ActivateCommitToolWindow)
nmap <leader>wd <Action>(ActivateDebugToolWindow)
nmap <leader>wr <Action>(ActivateRunToolWindow)
nmap <leader>wg <Action>(ActivateVersionControlToolWindow)
"nmap <leader>tm <Action>(ActivateMavenToolWindow)

"======================================= (m) Menu ================================================="

nmap <leader>mm <Action>(MainMenu)
nmap <leader>ma <Action>(AnalyzeMenu)
nmap <leader>mb <Action>(BuildMenu)
nmap <leader>mc <Action>(CodeMenu)
nmap <leader>mf <Action>(FindMenuGroup)
nmap <leader>mgm <Action>(GoToMenu)
nmap <leader>ms <Action>(ScopeViewPopupMenu)
nmap <leader>mt <Action>(EditorTabPopupMenu)
nmap <leader>mw <Action>(ToolWindowsGroup)
nmap <leader>mgg <Action>(Git.Menu)

nmap <leader>mr <Action>(RefactoringMenu)

nmap <leader>mi <Action>(ShowIntentionActions)

"======================================= (b) Block (Code fold/expand) ================================================="

map <leader>bc <Action>(CollapseRegion)
map <leader>be <Action>(ExpandRegion)

map <leader>bbc <Action>(CollapseAllRegions)
map <leader>bbe <Action>(ExpandAllRegions)

map <leader>ba <Action>(ExpandCollapseToggleAction)

map <leader>cc <Action>(CollapseDocComments)
map <leader>ce <Action>(ExpandDocComments)

"======================================= (o) Terminal ================================================="

map <leader>ot <Action>(ActivateTerminalToolWindow)
map <leader>oc <Action>(Terminal.OpenInTerminal)

"======== Optimize
map <leader>oo :action ReformatCode \| action OptimizeImports<CR>
map <leader>oi <Action>(OptimizeImports)
map <leader>or <Action>(ReformatCode)


"======================================= (z) Zen ================================================="

map <leader>z <Action>(ToggleZenMode)

"======================================= (p) Project management ================================================="

map <leader>pr <Action>(ManageRecentProjects)
map <leader>pl <Action>(RecentProjectListGroup)
map <leader>px <Action>(CloseProject)

nmap <leader>pw <Action>(ActivateProjectToolWindow)
nmap <leader>pv <Action>(SelectInProjectView)

"nnoremap <leader>pw :NERDTree<CR>
"nnoremap <leader>pv :NERDTreeFind<CR>


"======================================= (?) Bookmarks and buffer ================================================="
"nmap <leader>bb <Action>(Bookmarks)
"nmap <leader>bs <Action>(ShowBookmarks)
"nmap <leader>bt <Action>(ToggleBookmark)
"nmap <leader>bf <Action>(AddToFavorites)

"======================================= (?) Scroll ================================================="
"nmap <leader>eh <Action>(EditorScrollLeft)
"nmap <leader>ej <Action>(EditorScrollDown)
"nmap <leader>ek <Action>(EditorScrollUp)
"nmap <leader>el <Action>(EditorScrollRight)

"======================================= (?) Debugger ==============================================="

"nmap <leader>dE <Action>(EvaluateExpression)
"nmap <leader>di <Action>(Debugger.AddInlineWatch)
"nmap <leader>dw <Action>(Debugger.AddToWatch)
"nmap <leader>db <Action>(EditBrakpoint)
"nmap <leader>dt <Action>(ToggleLineBreakpoint)
"nmap <leader>dr <Action>(Debugger.RemoveAllBreakpointsInFile)
"nmap <leader>dR <Action>(Debugger.RemoveAllBreakpoints)
"nmap <leader>dm <Action>(XDebugger.MuteBreakpoints)
"nmap <leader>dc <Action>(ForceRunToCursor)
"nmap <C-j> <Action>(StepOver)
"nmap <C-k> <Action>(Resume)
"nmap <C-h> <Action>(StepOut)
"nmap <C-l> <Action>(ForceStepInto)
