" ================================ info ================================"
" .ideavimrc i sa configuration file for IdeaVim plugin. It uses"
"   the same commands as the original .vimrc configuration."
" You can find a list of commands here: https://jb.gg/h38q75"
" Find more examples here: https://jb.gg/share-ideavimrc"
" plugin instuctions: https://github.com/JetBrains/ideavim/wiki/IdeaVim-Plugins"

" Jetbrains Actions Mappings, all list of possible idea actions exec command :actionlist"

" In my case I prefer to use Control over Alt, so I rebinded some of the shortcuts"
" <EditorUp> -> <c-k> // Useful for navigating in pop ups"
" <EditorDown> -> <c-j> // Useful for navigating in pop ups"
" <ActivateProjectToolWindow> -> <c-e> // Go to project explorer"
" <HideActiveWindow> -> <c-h> // Minimize window"
" <NewElement> -> <c-n> // Useful for NerdTree"
" <ShowPopupMenu> -> <c-m> // Useful in many situations (NerdTree, editor...). It acts as a right click"
" <PreviousTab> -> <a-h> // Useful for switching tabs in terminal"
" <NextTab> -> <a-l> // Useful for switching tabs in terminal"
" <NextSplitter> -> <c-w> // Useful for switching windows"
" <PrevSplitter> -> <c-W> // Useful for switching windows"
" <EditorScrollDown> -> <c-J> // Useful for scrolling"
" <EditorScrollUp> -> <c-K> // Useful for scrolling"
" ============================== basic pre configuration ==========================="

noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

" use JJ and jj to move to normal mode
"inoremap jj <esc>
"inoremap JJ <esc>

"cnoremap jj <C-c>
"cnoremap JJ <C-c>

" The timeoutlen controls how long to wait before recognizing it as a sequence.
" set timeoutlen=1000 ""https://vi.stackexchange.com/questions/24925/usage-of-timeoutlen-and-ttimeoutlen"
set timeoutlen=600 "ms

" repeat comand for visually selected block"
vnoremap . :norm! .<CR>

" ================================ basic settings ================================="
set number relativenumber
set idearefactormode=keep

set ideajoin
set incsearch
set scrolloff=5
set hlsearch
set ignorecase
set smartcase
set ideaput

" ================================ space as leader ================================="
nnoremap <SPACE> <Nop>
let mapleader = " "

" ================================ plugins https://jb.gg/ideavim-plugins ================================="
set surround            "https://github.com/tpope/vim-surround"
set multiple-cursors    "https://github.com/terryma/vim-multiple-cursors"
set easymotion          "https://github.com/easymotion/vim-easymotion"
set commentary          "https://github.com/tpope/vim-commentary"
set highlightedyank     "https://github.com/machakann/vim-highlightedyank/blob/master/doc/highlightedyank.txt"
set NERDTree            "https://github.com/JetBrains/ideavim/wiki/NERDTree-support"
set exchange            "https://github.com/tommcdo/vim-exchange/blob/master/doc/exchange.txt"
set textobj-indent      "https://www.seanh.cc/2020/08/08/vim-indent-object/, https://github.com/michaeljsmith/vim-indent-object/blob/master/doc/indent-object.txt"

"========================================================================================"
"========================================================================================"
"===============================VIM KEY Mapping ========================================="
"========================================================================================"
"========================================================================================"

"======== (Move to line start/end)========
noremap H ^
noremap L $

"======== (Move between blocks)========"
noremap J }
noremap K {

" (Block ident)"
"vmap < <gv
"vmap > >gv

"(Copy to system clipboard)"
"vmap <C-S-c> +y "

"================================ NERDTree config ================================="
"===https://github.com/JetBrains/ideavim/wiki/NERDTree-support#supported-commands=="
map <C-p> :NERDTree<CR>
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'
nnoremap <leader>ft :NERDTree<CR>
nnoremap <leader>fT :NERDTreeFind<CR>

"======================================= Project Tree ================================================="
nmap <leader>e      <Action>(ActivateProjectToolWindow)
nmap <leader>e      <Action>(SelectInProjectView)


"================================ highlightedyank config ================================="
"let g:highlightedyank_highlight_color = "rgba(172, 205, 218, 1)""
let g:highlightedyank_highlight_duration = "300"

"================================ vim-multiple-cursors config ================================="
nmap <leader>n <Plug>NextWholeOccurrence
xmap <leader>n <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
"xmap <C-x> <Plug>SkipOccurrence
"xmap <C-p> <Plug>RemoveOccurrence

"================================ easymotion ================================="
map <leader>k <Plug>(easymotion-s)
map <leader>j <Plug>(easymotion-f)

"================================ macro ================================="
nnoremap R @q " R to execute q macro

"================================ tmpl config ================================="
" TODO:"

"================================ tmpl config ================================="
" TODO:"


"noremap x 5x
"inoremap <C-X> 5x
"inoremap <C-X> <esc>5xa " - remove 5 chard in insert mode and go back to insert mode

"========================================================================================"
"========================================================================================"
"========================Idea Custom Actions Mapping ===================================="
"========================================================================================"
"========================================================================================"
"===== All mapping based on leader (space) key
"===== All Intellij actions grouped in logical groups with unique group key with leader key
"==== There present next groups:
"==== key: (r) - Run & Debug
"==== key: (r) - Refactoring

"==== key: (d) - Debugger
"==== key: (c) - Code

"==== key: (n) - New
"==== key: (n) - Navigation

"==== key: (s) - Show
"==== key: (v) - View mode
"==== key: (g) - Git
"==== key: (w) - Windows \ Tabs
"==== key: (e) - Editor
"==== key: (m) - Menu
"==== key: (b) - Block (Code fold/expand)
"==== key: (t) - Terminal
"==== key: (z) - Zen
"==== key: (p) - Project management

" not used yet:
"==== key: (?) - Bookmarks and buffer
"==== key: (?) - Scroll

"==== Also there present many mapping based on modifier keys
"==== (especially when need repeat action and not call same all combination again and again that is quite annoying some time)
"==== for more info see separate mapping GROUP.
"====================================== (R) Run & Debug ==============================================="
nmap <leader>a      <Action>(Run)
nmap <leader>q      <Action>(Stop)

nmap <leader>rD <Action>(ChooseRunConfiguration)
nmap <leader>rp <Action>(Debug)
nmap <leader>rP <Action>(Run)
nmap <leader>rc <Action>(DebugClass)
map <leader>rr <Action>(RunClass)
nmap <leader>rr <Action>(Rerun)
nmap <leader>rs <Action>(Stop)
nmap <leader>ra <Action>(RunAnything)
map <leader>rc <Action>(ContextRun)
map <leader>rt <Action>(RunTests)
nmap <leader>tf <Action>(RerunFailedTests)

"======================================  Debugger ==============================================="
nmap <leader>de <action>(QuickEvaluateExpression)
nmap <leader>dE <action>(EvaluateExpression)
nmap <leader>di <Action>(Debugger.AddInlineWatch)
nmap <leader>dw <Action>(Debugger.AddToWatch)
nmap <leader>db <Action>(EditBrakpoint)
nmap <leader>dt <Action>(ToggleLineBreakpoint)
nmap <leader>dr <Action>(Debugger.RemoveAllBreakpointsInFile)
nmap <leader>dR <Action>(Debugger.RemoveAllBreakpoints)
nmap <leader>dm <Action>(XDebugger.MuteBreakpoints)
nmap <leader>dc <Action>(ForceRunToCursor)
nmap <C-j> <Action>(StepOver)
nmap <C-k> <Action>(Resume)
nmap <C-h> <Action>(StepOut)
nmap <C-l> <Action>(ForceStepInto)


"======================================= Code ================================================="
nmap <leader>cg       <Action>(Generate)
nmap <leader>coi      <Action>(OptimizeImports)
nmap <leader>cnc      <Action>(NewClass)"
nmap <leader>crc      <Action>(ReformatCode)

map <leader>im <Action>(ImplementMethods)
nmap \\ic <Action>(InspectCode)
map <leader>om <Action>(OverrideMethods)
nmap <Leader>sw <Action>(SurroundWith)

nmap <leader>cs     <Action>(QuickChangeScheme)

nmap <leader>s      <Action>(GlobalSettings)




map <leader>c <Action>(CommentByLineComment)
map <leader>C <Action>(CommentByBlockComment)
nmap <Leader>fd <Action>(FixDocComment) "https://blog.jetbrains.com/idea/2012/09/fix-doc-comment-action-is-available/"



"======================================= Refactoring ================================================="
nmap <leader>rag  <Action>(IntroduceActionsGroup)
nmap <leader>ric <Action>(IntroduceConstant)
nmap <leader>rif <Action>(IntroduceField)
nmap <leader>rifp <Action>(IntroduceFunctionalParameter)
nmap <leader>rifv <Action>(IntroduceFunctionalVariable)
nmap <leader>rip <Action>(IntroduceParameter)
nmap <leader>ripo <Action>(IntroduceParameterObject)
nmap <leader>riv <Action>(IntroduceVariable)
map <leader>re <Action>(Refactorings.QuickListPopupAction)
map <leader>uw <Action>(Unwrap)
map <leader>sw <Action>(SurroundWith)
map <leader>sd <Action>(SafeDelete)
map <leader>oi <Action>(OptimizeImports)

nmap <Leader>cr <Action>(CopyReference)
nmap <Leader>em <Action>(ExtractMethod)

" Join Lines"
nmap <leader>j <Action>(EditorJoinLines)
nmap <leader>es <Action>(EditorSortLines)
nmap <leader>esl <Action>(EditorSplitLine)

map gr <Action>(RefactoringMenu)
map gH <Action>(QuickActions)
map ga <Action>(ShowIntentionActions)
nmap == :action ReformatCode \| action OptimizeImports<CR>

nmap <Leader>me <Action>(RenameElement)
nmap <Leader>mf <Action>(RenameFile)
nmap <Leader>fc <Action>(ReformatCode)

"======================================= New ... ================================================="
map <leader>nn <Action>(NewElement)
map <leader>nd <Action>(NewDir)
map <leader>nf <Action>(NewFile)
map <leader>np <Action>(NewProject)
map <leader>nm <Action>(NewModule)


"======================================= Show ================================================="

nmap sao <Action>(SelectAllOccurrences)


nmap <leader>sch <Action>(CallHierarchy)
nmap <leader>smh <Action>(MethodHierarchy)
nmap <leader>sth <Action>(TypeHierarchy)
nmap <Leader>sn <Action>(LocalHistory.ShowHistory)
xmap <Leader>ssn <Action>(LocalHistory.ShowSelectionHistory)
map <leader>sfp <Action>(ShowFilePath)
map <leader>ssi <Action>(SelectIn)
map <leader>ssw <Action>($SearchWeb)
map <leader>sfu <Action>(FindUsages)
map <leader>ssu <Action>(ShowUsages)

map <leader>hl <Action>(HighlightUsagesInFile)
map <leader>qp <Action>(QuickPreview)
map <leader>qd <Action>(QuickDefinition)
map <leader>qD <Action>(QuickTypeDefinition)

"======================================= View mode ================================================="
map <leader>vf <Action>(ToggleFullScreen)
map <leader>vv <Action>(ToggleDistractionFreeMode)
map <leader>vp <Action>(TogglePresentationMode)

"======================================= Navigation ================================================="
map <M-k> <Action>(MoveLineUp)
map <M-j> <Action>(MoveLineDown)

noremap <Leader><Leader> <Action>(SearchEverywhere)
nmap <leader>fr <Action>(Replace)
nmap <leader>fp <Action>(FindInPath)
noremap <leader>sf <Action>(Find)
noremap <leader>sR <Action>(ReplaceInPath)
noremap <leader>sc :nohlsearch<CR>

nmap <leader>fb <Action>(Switcher)
nmap <leader>ff <Action>(GotoFile)
nmap <leader>fc <Action>(GotoClass)
nmap <leader>fs <Action>(GotoSymbol)
nmap <leader>fa <Action>(GotoAction)
nmap <leader>fd <Action>(GotoDatabaseObject)

nmap <leader>gp <Action>(GotToSuperMethod)
map gT <Action>(TextSearchAction)
map gd <Action>(GotoDeclaration)
map gI <Action>(QuickImplementations)

map gD <Action>(GotoTypeDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gs <Action>(GotoSuperMethod)
map gt <Action>(GotoTest)
nmap <Leader>j <Action>(ShowNavBar)
noremap  <Leader>k <Action>(KJumpAction)
nmap [u <Action>(GotoPrevElementUnderCaretUsage)
nmap ]u <Action>(GotoNextElementUnderCaretUsage)
nmap [o <Action>(PreviousOccurence)
nmap ]o <Action>(NextOccurence)
nmap ]c <Action>(JumpToNextChange)
nmap <leader>sl <Action>(RecentLocations)
nmap <leader>sd <Action>(QuickJavaDoc)
nmap <leader>se <Action>(ShowErrorDescription)
nmap <leader>sf <Action>(RecentFiles)
nmap <leader>sc <Action>(RecentChangedFiles)

nmap <leader>gb <Action>(Back)
nmap <leader>gc <Action>(VcsShowPrevChangeMarker)
nmap <leader>ge <Action>(JumpToLastChange)
nmap <leader>gf <Action>(Forward)
nmap <leader>gm <Action>(MethodDown)
nmap <leader>gn <Action>(VcsShowNextChangeMarker)

nmap <leader>gu <Action>(MethodUp)
nmap <leader>gw <Action>(GotoPreviousError)
nmap <leader>gx <Action>(GotoNextError)





"======================================= Git ================================================="
nmap <leader>m      <Action>(Git.Menu)
nmap <leader>ca <Action>(Annotate)

"======================================= Windows \ Tabs ================================================="
" (Move between panes top/bottom/left/right)"
map <C-k> <C-w>k
map <C-j> <C-w>j
map <C-h> <C-w>h
map <C-l> <C-w>l

nmap <Tab>     <Action>(NextTab)
nmap <S-Tab>   <Action>(PreviousTab)
nmap <leader>1 <Action>(GoToTab1)
nmap <leader>2 <Action>(GoToTab2)
nmap <leader>3 <Action>(GoToTab3)
nmap <leader>4 <Action>(GoToTab4)
nmap <leader>5 <Action>(GoToTab5)
nmap <leader>6 <Action>(GoToTab6)
nmap <leader>7 <Action>(GoToTab7)
nmap <leader>8 <Action>(GoToTab8)
nmap <leader>9 <Action>(GoToTab9)
map <leader>0 <Action>(GoToLastTab)

map <leader>sh <Action>(MoveTabLeft)
map <leader>sj <Action>(MoveTabDown)
map <leader>sk <Action>(MoveTabUp)
map <leader>sl <Action>(MoveTabRight)
map <leader>p <Action>(PinActiveEditorTab)

nmap tm <Action>(MoveEditorToOppositeTabGroup)
nmap to <Action>(OpenEditorInOppositeTabGroup)

nmap <leader>wh <Action>(CloseAllToTheLeft)
nmap <leader>wl <Action>(CloseAllToTheRight)
nmap <leader>wr <Action>(ReopenClosedTab)
nmap <leader>wc <Action>(HideAllWindows)

" (Pane vertically split/horizontally split/close)"
map <leader>sH <Action>(SplitHorizontally)
map <leader>sV <Action>(SplitVertically)
nmap <leader>wu <Action>(Unsplit)
"map <C-p> <Action>(JumpToLastWindow)
map <M-i> <Action>(PrevSplitter)
map <M-o> <Action>(NextSplitter)

nmap <leader>wc <Action>(ActivateCommitToolWindow)
nmap <leader>wd <Action>(ActivateDebugToolWindow)
nmap <leader>wr <Action>(ActivateRunToolWindow)
nmap <leader>wg <Action>(ActivateVersionControlToolWindow)
nmap <leader>wm <Action>(ActivateMavenToolWindow)

nmap <leader>wk <Action>(StretchSplitToTop)
nmap <leader>wj <Action>(StretchSplitToBottom)
nmap <leader>wh <Action>(StretchSplitToLeft)
nmap <leader>wl <Action>(StretchSplitToRight)
map <leader>wm <Action>(MaximizeEditorInSplit)
map <leader>wu <Action>(UnsplitAll)
nmap zn <Action>(ToggleDistractionFreeMode)
"======================================= Editor ================================================="
nmap <leader>cc     <Action>(CloseEditor)
nmap <leader>cp     <Action>(CloseProject)

map <leader>xx <Action>(CloseContent)
map <leader>xa <Action>(CloseAllEditors)
map <leader>xo <Action>(CloseAllEditorsButActive)
map <leader>xp <Action>(CloseAllUnpinnedEditors)

nmap <leader>h      <Action>(HideActiveWindow)

"======================================= Menu ================================================="
map <leader>mm <Action>(MainMenu)
map <leader>ma <Action>(AnalyzeMenu)
map <leader>mb <Action>(BuildMenu)
map <leader>mc <Action>(CodeMenu)
map <leader>mf <Action>(FindMenuGroup)
map <leader>mg <Action>(GoToMenu)
map <leader>ms <Action>(ScopeViewPopupMenu)
map <leader>mt <Action>(EditorTabPopupMenu)
map <leader>mw <Action>(ToolWindowsGroup)

"======================================= Block (Code fold/expand) ================================================="
map zm <Action>(CollapseRegion)
map za <Action>(ExpandRegion)
map zM <Action>(CollapseAllRegions)
map zR <Action>(ExpandAllRegions)
map zz <Action>(ExpandCollapseToggleAction)

"======================================= Terminal ================================================="
nmap <leader>tt <Action>(ActivateTerminalToolWindow)
nmap <leader>tc <Action>(Terminal.OpenInTerminal) " OpenTerminal with current dir"

"======================================= Zen ================================================="
map <leader>z <Action>(ToggleZenMode)

"======================================= Project management ================================================="
map <leader>pr <Action>(ManageRecentProjects)
map <leader>pl <Action>(RecentProjectListGroup)
map <leader>px <Action>(CloseProject)

"======================================= Bookmarks and buffer ================================================="
"nmap <leader>bb <Action>(Bookmarks)
"nmap <leader>bs <Action>(ShowBookmarks)
"nmap <leader>bt <Action>(ToggleBookmark)
"nmap <leader>bf <Action>(AddToFavorites)

"======================================= Scroll ================================================="
"nmap <leader>eh <Action>(EditorScrollLeft)
"nmap <leader>ej <Action>(EditorScrollDown)
"nmap <leader>ek <Action>(EditorScrollUp)
"nmap <leader>el <Action>(EditorScrollRight)


